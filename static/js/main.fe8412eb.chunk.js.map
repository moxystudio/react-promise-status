{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","thresholdMs","setThresholdMs","_useState3","_useState4","saveDuration","setSaveDuration","_useState5","_useState6","promise","setPromise","promiseState","usePromiseState","saveDisabled","status","console","log","react_default","a","createElement","react","index_es","className","id","label","value","onChange","event","Number","target","margin","variant","color","disabled","onClick","pDelay","withinThreshold","generateClassName","createGenerateClassName","jss","create","objectSpread","jssPreset","insertionPoint","document","getElementById","ReactDOM","render","JssProvider_default","src_App_0"],"mappings":"mRAmEeA,UA7DH,WAAM,IAAAC,EACwBC,mBAAS,KADjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACMI,EADNJ,EAAA,GAAAK,EAE0BN,mBAAS,KAFnCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEPE,EAFOD,EAAA,GAEOE,EAFPF,EAAA,GAAAG,EAIgBV,qBAJhBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAIPE,EAJOD,EAAA,GAIEE,EAJFF,EAAA,GAKRG,EAAeC,YAAgBH,EAAS,CAAER,gBAE1CY,EAAuC,YAAxBF,EAAaG,OAOlC,OAFAC,QAAQC,IAAIL,GAGRM,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,kBAEAF,EAAAC,EAAAC,cAAA,yFACiFF,EAAAC,EAAAC,cAAA,YAAQd,EAAR,MADjF,IACiHY,EAAAC,EAAAC,cAAA,WAC3GlB,GAAeI,GAAgBY,EAAAC,EAAAC,cAACC,EAAA,SAAD,iBAAmBH,EAAAC,EAAAC,cAAA,yBAAnB,0BAAkEF,EAAAC,EAAAC,cAAA,2BAAlE,0DAC/BlB,EAAcI,GAAgBY,EAAAC,EAAAC,cAACC,EAAA,SAAD,iBAAmBH,EAAAC,EAAAC,cAAA,qBAAnB,0BAA8DF,EAAAC,EAAAC,cAAA,2BAA9D,iDAGpCF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,UAAU,qBACVC,GAAG,eACHC,MAAM,qBACNC,MAAQpB,EACRqB,SArBiB,SAACC,GAAD,OAAWrB,EAAgBsB,OAAOD,EAAME,OAAOJ,QAAU,IAsB1EK,OAAO,WAEXb,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIE,GAAG,cACHC,MAAM,cACNC,MAAQxB,EACRyB,SA7BgB,SAACC,GAAD,OAAWzB,EAAe0B,OAAOD,EAAME,OAAOJ,QAAU,IA8BxEK,OAAO,WAEXb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,UAAU,kBACVS,QAAQ,YACRC,MAAM,UACNC,SAAWpB,EACXqB,QApCD,kBAAMxB,EAAWyB,IAAO9B,MA+B3B,QASAY,EAAAC,EAAAC,cAAA,YAC8B,YAAxBR,EAAaG,SAAyBH,EAAayB,iBAAmBnB,EAAAC,EAAAC,cAACE,EAAA,EAAD,MAC9C,cAAxBV,EAAaG,QAA0B,SACf,aAAxBH,EAAaG,QAAyB,+DCnD1DuB,EAAoBC,oCACpBC,EAAMC,iBAAOzC,OAAA0C,EAAA,EAAA1C,CAAA,GACZ2C,sBADW,CAGdC,eAAgBC,SAASC,eAAe,0BAG5CC,IAASC,OACL9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAaqB,IAAMA,EAAMF,kBAAoBA,GACzCpB,EAAAC,EAAAC,cAAC8B,EAAD,OAEJL,SAASC,eAAe","file":"static/js/main.fe8412eb.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport pDelay from 'delay';\nimport { TextField, Button, CircularProgress } from '@material-ui/core';\nimport { usePromiseState } from 'react-promiseful';\nimport './App.css';\n\nconst App = () => {\n    const [thresholdMs, setThresholdMs] = useState(300);\n    const [saveDuration, setSaveDuration] = useState(300);\n\n    const [promise, setPromise] = useState();\n    const promiseState = usePromiseState(promise, { thresholdMs });\n\n    const saveDisabled = promiseState.status === 'pending';\n    const handleThresholdMsChange = (event) => setThresholdMs(Number(event.target.value) || 0);\n    const handleSaveDurationChange = (event) => setSaveDuration(Number(event.target.value) || 0);\n    const handleSave = () => setPromise(pDelay(saveDuration));\n\n    console.log(promiseState);\n\n    return (\n        <section>\n            <h1>Demo</h1>\n\n            <p>\n                Hitting the save button below will simulate a async operation that lasts for <code>{ saveDuration }ms</code>.<br />\n                { thresholdMs >= saveDuration && <Fragment>You will <strong>not see</strong> a spinner because the <code>thresholdMs</code> is higher or equal than the async operation duration.</Fragment> }\n                { thresholdMs < saveDuration && <Fragment>You will <strong>see</strong> a spinner because the <code>thresholdMs</code> is lower than the async operation duration.</Fragment> }\n            </p>\n\n            <form>\n                <TextField\n                    className=\"App__durationInput\"\n                    id=\"saveDuration\"\n                    label=\"Save duration (ms)\"\n                    value={ saveDuration }\n                    onChange={ handleSaveDurationChange }\n                    margin=\"normal\" />\n\n                <TextField\n                    id=\"thresholdMs\"\n                    label=\"thresholdMs\"\n                    value={ thresholdMs }\n                    onChange={ handleThresholdMsChange }\n                    margin=\"normal\" />\n\n                <div className=\"App__bottom\">\n                    <Button\n                        className=\"App__saveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={ saveDisabled }\n                        onClick={ handleSave }>\n                        Save\n                    </Button>\n\n                    <span>\n                        { promiseState.status === 'pending' && !promiseState.withinThreshold && <CircularProgress /> }\n                        { promiseState.status === 'fulfilled' && 'Saved!' }\n                        { promiseState.status === 'rejected' && 'Oops, failed to save' }\n                    </span>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles';\n\nconst generateClassName = createGenerateClassName();\nconst jss = create({\n    ...jssPreset(),\n    // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n    insertionPoint: document.getElementById('jss-insertion-point'),\n});\n\nReactDOM.render(\n    <JssProvider jss={ jss } generateClassName={ generateClassName }>\n        <App />\n    </JssProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}