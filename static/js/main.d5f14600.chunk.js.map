{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","thresholdMs","setThresholdMs","_useState3","_useState4","saveDuration","setSaveDuration","_useState5","_useState6","promise","setPromise","promiseState","usePromiseState","saveDisabled","status","console","log","react_default","a","createElement","react","onSubmit","e","preventDefault","index_es","className","id","label","value","onChange","event","Number","target","margin","variant","color","disabled","onClick","pDelay","withinThreshold","generateClassName","createGenerateClassName","jss","create","objectSpread","jssPreset","insertionPoint","document","getElementById","ReactDOM","render","JssProvider_default","src_App_0"],"mappings":"mRAoEeA,UA9DH,WAAM,IAAAC,EACwBC,mBAAS,KADjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACMI,EADNJ,EAAA,GAAAK,EAE0BN,mBAAS,KAFnCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEPE,EAFOD,EAAA,GAEOE,EAFPF,EAAA,GAAAG,EAIgBV,qBAJhBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAIPE,EAJOD,EAAA,GAIEE,EAJFF,EAAA,GAKRG,EAAeC,YAAgBH,EAAS,CAAER,gBAE1CY,EAAuC,YAAxBF,EAAaG,OAQlC,OAFAC,QAAQC,IAAI,eAAgBL,GAGxBM,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gCAAJ,SAEAF,EAAAC,EAAAC,cAAA,0FACkFF,EAAAC,EAAAC,cAAA,YAAQd,EAAR,MADlF,IACkHY,EAAAC,EAAAC,cAAA,WAC5GlB,GAAeI,GAAgBY,EAAAC,EAAAC,cAACC,EAAA,SAAD,iBAAmBH,EAAAC,EAAAC,cAAA,yBAAnB,0BAAkEF,EAAAC,EAAAC,cAAA,2BAAlE,0DAC/BlB,EAAcI,GAAgBY,EAAAC,EAAAC,cAACC,EAAA,SAAD,iBAAmBH,EAAAC,EAAAC,cAAA,qBAAnB,0BAA8DF,EAAAC,EAAAC,cAAA,2BAA9D,iDAGpCF,EAAAC,EAAAC,cAAA,QAAME,SAdO,SAACC,GAAD,OAAOA,EAAEC,mBAelBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,UAAU,qBACVC,GAAG,eACHC,MAAM,qBACNC,MAAQvB,EACRwB,SAtBiB,SAACC,GAAD,OAAWxB,EAAgByB,OAAOD,EAAME,OAAOJ,QAAU,IAuB1EK,OAAO,WAEXhB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIE,GAAG,cACHC,MAAM,cACNC,MAAQ3B,EACR4B,SA9BgB,SAACC,GAAD,OAAW5B,EAAe6B,OAAOD,EAAME,OAAOJ,QAAU,IA+BxEK,OAAO,WAEXhB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACXR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,UAAU,kBACVS,QAAQ,YACRC,MAAM,UACNC,SAAWvB,EACXwB,QArCD,kBAAM3B,EAAW4B,IAAOjC,MAgC3B,QASAY,EAAAC,EAAAC,cAAA,YAC8B,YAAxBR,EAAaG,SAAyBH,EAAa4B,iBAAmBtB,EAAAC,EAAAC,cAACK,EAAA,EAAD,MAC9C,cAAxBb,EAAaG,QAA0B,SACf,aAAxBH,EAAaG,QAAyB,+DCpD1D0B,EAAoBC,oCACpBC,EAAMC,iBAAO5C,OAAA6C,EAAA,EAAA7C,CAAA,GACZ8C,sBADW,CAEdC,eAAgBC,SAASC,eAAe,0BAG5CC,IAASC,OACLjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAawB,IAAMA,EAAMF,kBAAoBA,GACzCvB,EAAAC,EAAAC,cAACiC,EAAD,OAEJL,SAASC,eAAe","file":"static/js/main.d5f14600.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport pDelay from 'delay';\nimport { TextField, Button, CircularProgress } from '@material-ui/core';\nimport { usePromiseState } from 'react-promiseful';\nimport './App.css';\n\nconst App = () => {\n    const [thresholdMs, setThresholdMs] = useState(300);\n    const [saveDuration, setSaveDuration] = useState(300);\n\n    const [promise, setPromise] = useState();\n    const promiseState = usePromiseState(promise, { thresholdMs });\n\n    const saveDisabled = promiseState.status === 'pending';\n    const handleThresholdMsChange = (event) => setThresholdMs(Number(event.target.value) || 0);\n    const handleSaveDurationChange = (event) => setSaveDuration(Number(event.target.value) || 0);\n    const handleSave = () => setPromise(pDelay(saveDuration));\n    const handleSubmit = (e) => e.preventDefault();\n\n    console.log('promiseState', promiseState);\n\n    return (\n        <section>\n            <h1><code>react-promiseful</code> demo</h1>\n\n            <p>\n                Hitting the save button below will simulate an async operation that lasts for <code>{ saveDuration }ms</code>.<br />\n                { thresholdMs >= saveDuration && <Fragment>You will <strong>not see</strong> a spinner because the <code>thresholdMs</code> is higher or equal than the async operation duration.</Fragment> }\n                { thresholdMs < saveDuration && <Fragment>You will <strong>see</strong> a spinner because the <code>thresholdMs</code> is lower than the async operation duration.</Fragment> }\n            </p>\n\n            <form onSubmit={ handleSubmit }>\n                <TextField\n                    className=\"App__durationInput\"\n                    id=\"saveDuration\"\n                    label=\"Save duration (ms)\"\n                    value={ saveDuration }\n                    onChange={ handleSaveDurationChange }\n                    margin=\"normal\" />\n\n                <TextField\n                    id=\"thresholdMs\"\n                    label=\"thresholdMs\"\n                    value={ thresholdMs }\n                    onChange={ handleThresholdMsChange }\n                    margin=\"normal\" />\n\n                <div className=\"App__bottom\">\n                    <Button\n                        className=\"App__saveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={ saveDisabled }\n                        onClick={ handleSave }>\n                        Save\n                    </Button>\n\n                    <span>\n                        { promiseState.status === 'pending' && !promiseState.withinThreshold && <CircularProgress /> }\n                        { promiseState.status === 'fulfilled' && 'Saved!' }\n                        { promiseState.status === 'rejected' && 'Oops, failed to save' }\n                    </span>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles';\n\nconst generateClassName = createGenerateClassName();\nconst jss = create({\n    ...jssPreset(),\n    insertionPoint: document.getElementById('jss-insertion-point'),\n});\n\nReactDOM.render(\n    <JssProvider jss={ jss } generateClassName={ generateClassName }>\n        <App />\n    </JssProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}